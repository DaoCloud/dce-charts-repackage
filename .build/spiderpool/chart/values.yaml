# Default values for spiderpool.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

ipFamily:
  enableIPv4: true
  enableIPv6: true

rbac:
  # -- Enable creation of Resource-Based Access Control configuration.
  create: true

# default spiderpool
nameOverride: ""

clusterDnsDomain: "cluster.local"

## @param commonAnnotations Annotations to add to all deployed objects
##
commonAnnotations: {}
#  annotation1: v1
#  annotation2: v2

## @param commonLabels Labels to add to all deployed objects
##
commonLabels: {}
#  label1: v1
#  labele: v2

ipamPlugin:
  # -- Configure the path to the configuration directory on the host.
  confPath: /etc/cni/net.d/spiderpool
  binPath: /opt/cni/bin

  # -- Configure the path to the binary directory on the host.
  ipamBinPath: /opt/cni/bin

  # -- Configure the unix socket path to connect with the spiderpool agent.
  ipamUNIXSocketDir: /var/run/spidernet
  ipamUNIXSocketPath: /var/run/spidernet/spiderpool.sock

clusterDefaultPool:
  installIPv4IPPool: false
  installIPv6IPPool: false
  ipv4IPPoolName: "default-v4-ippool"
  ipv6IPPoolName: "default-v6-ippool"
  ipv4Subnet: ""
  ipv6Subnet: ""
  ipv4IPRanges: []
  ipv6IPRanges: []

configmap:
  configCmName: "spiderpool-conf"

  config:
    # -- Unix domain socket path to listen for ipam plugin.
    ipamUnixSocketPath: /var/run/spidernet/spiderpool.sock
    networkMode: legacy
    enableStatefulSet: true

spiderpoolAgent:
  name: "spiderpool-agent"

  binName: "spiderpool-agent"

  image:
    repository: ghcr.io/spidernet-io/spiderpool/spiderpool-agent
    pullPolicy: IfNotPresent
    # take preference over tag
    digest: ""
    # Overrides the image tag whose default is the chart appVersion.
    tag: v0.0.6
    imagePullSecrets: []
    # - name: "image-pull-secret"

  nodeSelector:
    kubernetes.io/os: linux

  nameOverride: ""

  serviceAccount:
    create: true
    annotations: {}

  # -- http Port to listen to for health checking
  healthPort: 5710

  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate

  service:
    # Optional annotations to add to the Service
    annotations: {}
    type: ClusterIP

  # --  Node tolerations
  # ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
  tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    - key: node.kubernetes.io/not-ready
      effect: NoSchedule
    - key: node-role.kubernetes.io/master
      effect: NoSchedule
    - key: CriticalAddonsOnly
      operator: Exists

  priorityClassName: ""

  affinity: {}

  # -- Additional container arguments.
  extraArgs: []

  # -- Additional container environment variables.
  extraEnv: []

  # -- Additional agent hostPath mounts.
  extraHostPathMounts: []
    # - name: host-mnt-data
    #   mountPath: /host/mnt/data
    #   hostPath: /mnt/data
    #   hostPathType: Directory
    #   readOnly: true
    #   mountPropagation: HostToContainer

  # -- Additional agent volumes.
  extraVolumes: []

  # -- Additional agent volumeMounts.
  extraVolumeMounts: []

  # -- Annotations to be added to agent pods
  podAnnotations: {}

  # -- Labels to be added to agent pods
  podLabels: {}

  # -- Configure the path to where to mount the ConfigMap inside the agent pod.
  confFileMountPath: /tmp/cni-configuration

  resources:
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    limits:
      cpu: 1000m
      memory: 1024Mi
    requests:
      cpu: 100m
      memory: 128Mi

  # -- Security context to be added to agent pods
  securityContext: {}
  # runAsUser: 0

  # -- Configure the path to where the CNI configuration directory is mounted
  # inside the agent pod.
  hostConfDirMountPath: /host/etc/cni/net.d/spiderpool

  healthChecking:
    startupProbe:
      # -- failure threshold of startup probe.
      # 105 x 2s translates to the old behaviour of the readiness probe (120s delay + 30 x 3s)
      failureThreshold: 60
      # -- interval between checks of the startup probe
      periodSeconds: 2

    livenessProbe:
      # -- failure threshold of liveness probe
      failureThreshold: 6
      # -- interval between checks of the liveness probe
      periodSeconds: 10

    readinessProbe:
      # -- failure threshold of readiness probe
      failureThreshold: 3
      # -- interval between checks of the readiness probe
      periodSeconds: 10

  # -- Enable prometheus metrics for cilium-operator on the configured port at
  # /metrics
  prometheus:
    # -- Enable service monitors.
    # This requires the prometheus CRDs to be available (see https://github.com/prometheus-operator/prometheus-operator/blob/master/example/prometheus-operator-crd/monitoring.coreos.com_servicemonitors.yaml)
    enabled: false
    port: 5711
    serviceMonitor:
      labels: {}
      annotations: {}
    prometheusRule:
      # enable alter rules
      enabled: false

  debug:
    # debug, info, warn, error, fatal, panic
    logLevel: "info"
    gopsPort: 5712

spiderpoolController:
  name: "spiderpool-controller"

  replicas: 1

  binName: "spiderpool-controller"

  # ippool is not installed when installation , so have to be hostnetwork
  hostnetwork: true

  nameOverride: ""

  image:
    repository: ghcr.io/spidernet-io/spiderpool/spiderpool-controller
    pullPolicy: IfNotPresent
    # take preference over tag
    digest: ""
    # digest: "sha256:251ff274acf22fd2067b29a31e9fda94253d2961c061577203621583d7e85bd2"
    # Overrides the image tag whose default is the chart appVersion.
    tag: v0.0.6
    imagePullSecrets: []
    # - name: "image-pull-secret"

  nodeSelector:
    kubernetes.io/os: linux

  affinity: {}

  serviceAccount:
    create: true
    name: ""
    annotations: {}

  service:
    # Optional annotations to add to the Service
    annotations: {}
    type: ClusterIP

  tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    - key: node.kubernetes.io/not-ready
      effect: NoSchedule
    - key: node-role.kubernetes.io/master
      effect: NoSchedule
    - key: CriticalAddonsOnly
      operator: Exists

  priorityClassName: ""

  # -- Additional container arguments.
  extraArgs: []

  # -- Additional container environment variables.
  extraEnv: []

  # -- Additional agent hostPath mounts.
  extraHostPathMounts: []
    # - name: host-mnt-data
    #   mountPath: /host/mnt/data
    #   hostPath: /mnt/data
    #   hostPathType: Directory
    #   readOnly: true
  #   mountPropagation: HostToContainer

  # -- Additional agent volumes.
  extraVolumes: []
    # - name: test-val
    #   mountPath: /host/tmp

  # -- Additional agent volumeMounts.
  extraVolumeMounts: []
    # - name: test-val
    #   mountPath: /tmp

  # -- Annotations to be added to agent pods
  podAnnotations: {}
    # test: 100

  # -- Labels to be added to agent pods
  podLabels: {}

  # -- security context
  securityContext: {}
  # runAsUser: 0

  resources:
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    limits:
      cpu: 500m
      memory: 1024Mi
    requests:
      cpu: 100m
      memory: 128Mi

  # PodDisruptionBudget settings
  podDisruptionBudget:
    # -- enable PodDisruptionBudget
    # ref: https://kubernetes.io/docs/concepts/workloads/pods/disruptions/
    enabled: false
    # -- Minimum number/percentage of pods that should remain scheduled.
    # When it's set, maxUnavailable must be disabled by `maxUnavailable: null`
    minAvailable: 1
    # -- Maximum number/percentage of pods that may be made unavailable
   # maxUnavailable: 1

  healthChecking:
    startupProbe:
      # -- failure threshold of startup probe.
      # 105 x 2s translates to the old behaviour of the readiness probe (120s delay + 30 x 3s)
      failureThreshold: 30
      # -- interval between checks of the startup probe
      periodSeconds: 2

    livenessProbe:
      # -- failure threshold of liveness probe
      failureThreshold: 6
      # -- interval between checks of the liveness probe
      periodSeconds: 10

    readinessProbe:
      # -- failure threshold of readiness probe
      failureThreshold: 3
      # -- interval between checks of the readiness probe
      periodSeconds: 10

  # -- http Port to listen to for health checking
  healthPort: 5720

  # -- https Port to listen to webhook
  webhookPort: 5722

  # -- https Port to listen to cli command
  cliPort: 5723

  # -- Enable prometheus metrics for cilium-operator on the configured port at
  # /metrics
  prometheus:
    enabled: false
    port: 5721
    serviceMonitor:
      # -- Enable service monitors.
      # This requires the prometheus CRDs to be available (see https://github.com/prometheus-operator/prometheus-operator/blob/master/example/prometheus-operator-crd/monitoring.coreos.com_servicemonitors.yaml)
      enabled: false
      labels: {}
      annotations: {}
    prometheusRule:
      # enable alter rules
      enabled: false

  debug:
    # debug, info, warn, error, fatal, panic
    logLevel: "info"
    gopsPort: 5724

  gc:
    # global enable
    enabled: true
    # if enabled=false, ignore this
    gcTerminatingPodIPEnabled: true
    # delay to gc pod ip after pod graceful time, second
    gcTerminatingPodIPDelay: 0
    # if enabled=false, ignore this
    gcEvictedPodIPEnabled: true
    # delay to gc pod ip after pod graceful time, second
    gcEvictedPodIPDelay: 0

  # -- TLS configuration for webhook
  tls:
    # -- Set the method to auto-generate certificates. Supported values:
    # - provided:     provide all certificates by helm options
    # - certmanager:  This method use cert-manager to generate & rotate certificates.
    method: provided

    # the secret with same namespace
    secretName: "spiderpool-controller-server-certs"

    # for certmanager method
    certmanager:
      # -- Generated certificates validity duration in days.
      certValidityDuration: 365

      # If not specified, a CA issuer will be created.
      # used by method certmanager
      issuerName: ""

      # -- Extra DNS names added to certificate when it's auto generated
      extraDnsNames: []
      # -- Extra IP addresses added to certificate when it's auto generated
      extraIPAddresses: []

    # -- for provided method
    server:
      # used by method provided
      # encoded
      tlsCert: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUVEekNDQXZlZ0F3SUJBZ0lVUyswSVJ5bFlucjJOUWRwQ2x4bkkybGxEMmo4d0RRWUpLb1pJaHZjTkFRRUwKQlFBd01ERXVNQ3dHQTFVRUF3d2xjM0JwWkdWeWNHOXZiQzFqYjI1MGNtOXNiR1Z5TG10MVltVXRjM2x6ZEdWdApMbk4yWXpBZUZ3MHlNakE0TVRZd09ETXhOVE5hRncwek1qQTRNVE13T0RNeE5UTmFNREF4TGpBc0JnTlZCQU1NCkpYTndhV1JsY25CdmIyd3RZMjl1ZEhKdmJHeGxjaTVyZFdKbExYTjVjM1JsYlM1emRtTXdnZ0VpTUEwR0NTcUcKU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQ2xLZ01ZL1IrZ0hpRzFRQ29vdkFiQlAyOTl0VkRHbzB3VwpTZDVISU5GN2x6bndOV2w3U0dRY2R3WlY1VXdYUDZOaFBuWFdDeGxraWlpQXFmd2lKK0VpemVBaU9PYWh6ZHRrClpHTW1FRElmUnlsNXV2UEZyc0lqelZMSUtLaEhqVGtYekVwTEpmUXVkNVJVV2FwNkpDcHc2VXdMaW03Y2YwbU8KdC9hVWFFZDdHUlM1QUIvbWxaSjRLb1hCVW1WRjl2U1c0ajFxYVB2YXNxa0JDaWwwS3ZPS2N0dG1McjRIajg5WApLTThvdVVGU1RUMERYVUNxT283SUVmTm56Y1R3aHNIUUwwVElwOWFWSk41bEZXR0ppbGpKd0ZMdmdWcW1rOS9yCmxMTzcwbzNmTCtaSlIwRXRTaHFRYWM5T1lZSFBiL0plV0JZbHhQdGJERnpXMS9nVXJDNlhBZ01CQUFHamdnRWYKTUlJQkd6QUpCZ05WSFJNRUFqQUFNQXNHQTFVZER3UUVBd0lGNERBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjRApBZ1lJS3dZQkJRVUhBd0V3Z2FFR0ExVWRFUVNCbVRDQmxvSVZjM0JwWkdWeWNHOXZiQzFqYjI1MGNtOXNiR1Z5CmdpRnpjR2xrWlhKd2IyOXNMV052Ym5SeWIyeHNaWEl1YTNWaVpTMXplWE4wWlcyQ0pYTndhV1JsY25CdmIyd3QKWTI5dWRISnZiR3hsY2k1cmRXSmxMWE41YzNSbGJTNXpkbU9DTTNOd2FXUmxjbkJ2YjJ3dFkyOXVkSEp2Ykd4bApjaTVyZFdKbExYTjVjM1JsYlM1emRtTXVZMngxYzNSbGNpNXNiMk5oYkRBZEJnTlZIUTRFRmdRVWx2V3hzalI3CjQ4b3lDbzFVSFlNQTFOSUUxWjB3SHdZRFZSMGpCQmd3Rm9BVVI5OTM4TUpsanpIN2RBcldocDlLTGsyMFFUOHcKRFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUZhVFp1RWVMQ3lqNGZLdUhCU2Rtc2t4STJ0MXpXQTZHSnU5R2c2agp6UkNJRWtralhIMUF1K1N6dmY4Q0ZnVEx5NFRaZmNaK3FVYmRCTUlYNVdCYUpRc3AwdjA5V2RwVVp4aUd4NWN4CkpIakg0eG5SWFI2SjUxajBJeGIzcE5zNmRjanlKUTBtNjE3eUVlVFh0YkM1OFROcWw0b200dDZORlYweURpWGoKNVE3b0s3RXlBcTVlT3lacEhKV3N4aUhQWGlOWmFlVDhiMWN6aGo0UWZmNnlyaWFPUjMza21hRVhOaERIeDcwcQp2ZUsvVEM3OG1zcVdmOUY0dDR4amRZVS8ybGFXYVdEWXdtcy9Ecjd4NitITGYrVUVLY0lFT3ZYYmEzdzJnYkFLCi9WazBxVHZFSzY5elh2bHFvU2xBWGErWFNVYzRGVlRFTm9oS2MwalRiTHZoQkJ3PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
      tlsKey: "LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2QUlCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktZd2dnU2lBZ0VBQW9JQkFRQ2xLZ01ZL1IrZ0hpRzEKUUNvb3ZBYkJQMjk5dFZER28wd1dTZDVISU5GN2x6bndOV2w3U0dRY2R3WlY1VXdYUDZOaFBuWFdDeGxraWlpQQpxZndpSitFaXplQWlPT2FoemR0a1pHTW1FRElmUnlsNXV2UEZyc0lqelZMSUtLaEhqVGtYekVwTEpmUXVkNVJVCldhcDZKQ3B3NlV3TGltN2NmMG1PdC9hVWFFZDdHUlM1QUIvbWxaSjRLb1hCVW1WRjl2U1c0ajFxYVB2YXNxa0IKQ2lsMEt2T0tjdHRtTHI0SGo4OVhLTThvdVVGU1RUMERYVUNxT283SUVmTm56Y1R3aHNIUUwwVElwOWFWSk41bApGV0dKaWxqSndGTHZnVnFtazkvcmxMTzcwbzNmTCtaSlIwRXRTaHFRYWM5T1lZSFBiL0plV0JZbHhQdGJERnpXCjEvZ1VyQzZYQWdNQkFBRUNnZ0VBSzR5NjJWMXc5OWJLRzVFcUxLaDdmWHdkQ1VBRVp3UUszWHVueFFpRncvbFoKbVJsMFVVSUN4N0NvdG9CcUFsMVExcVRTREZqTDNzTkJMNy9pa0IwRTA1a0dadStxL0hJYnpjcGNqRjVMNFF4eQpCcnVCYUpnT2I4TkZkeXFsU0l5WHg4c2hzZFAxb1VUOWt3bzdsYzR3ZEtwSFYybXVscXhuZUY3UWdVeEh3TkNzCjIvSmExRUhxMUZlWGtGRVE4bCtMeFdCY2hFdnpGNXN0Tng4TTdJYXFyY2RoU05pT2hXdVJOTU5CRXRWd3BJeEwKM0JCejYvaHZ0SWZXU2c2c2d0aU1rZjE3cHo5V05wSlVXRjhuQUJHSUZKNmhvQjQvRDdxSHZGYmtMZ2VKaXJ6YQptTFN2a0NCOERuMGJyV2tlSnJuaHdSYWxyenVzTHF3Si8zTC9QK2owblFLQmdRRGdEK1hTRVE3akE5MFpkTm1OCjF4N2JVcXNDY3RHc0tNUXJYTU5jVVdDYVB3ZG4vNkcyc2NZWTZKN2pPdlBvWkN0T0xScVdqMVRYUmlJQ1o1WnMKQktEQUpqUGMzZW1MZy9ibmhjeiszcDd5UTZqd0Qxdy9wSEFWOUJ1SmdwZ1pxYXdzUGltYlJOUzNSa1pxc2YzNwo4K0ZxN0UrYk5ITzlYSmNKZXh3dTRMS05IUUtCZ1FDOHRPZ1o5YmkyVnRLdUNmWC9PYTdOTEd3QU1qWkxKVzJRClZ5Z0dGTTNtdHFyb1FySHRCSWViNVBOalBES3pPMEhVWnhwN0RGM1VTdHRVY2Foc3J2N2hqNFhVVlNlOE5wMW8KSTlnQllOamRrQU9MejdtZjNUaVM5SlVtSnBpVlg5Yyt5MVFLNHJ0cHFRSFVISENnRXZKL01idVZCbS8zN0pxTApVOGM5N3pKQVF3S0JnQWM3SEJ5YVpsT1hOVlJ6KysxaTZ1RURHdmU2UXQvK2RNNDljU1NTajc2S21DK1lCVjBECkFiU2VGVHFhRlhNRGdJNUdVRnhaaGRCb3VBSkIyNDNpM0ZrM0ltZFhWZ2tsbWh0QXF5dnlmVWl1UEU1N0FHd2gKWDJpbDl4bUorR1Nqb0NYUlg4QmVDVXRjM2pybFFhQVc3OGhtbGU4WlV6N2lOUkdlUW51VXpzNVZBb0dBRm1xQworN3AxczZ0Q29ZdnJYZU1UUWFvYU5qZkF2VkozM21LTURaVGhGSnYwVjF5ODJBUG11LzBKY0d0Uk5ucytpYVdwCnZwNHNjekJsTjNXODVSUXdrTWpFeEFGTmxBMEV5NzhlUktPbGYwUkJONVY0WG1ZZjkwejRmcXl0Q1dsMkh5NTIKRUVqNHJFZDRRU01UdWVBbVVEZXZLYmUzQzBOZTVGZ1NYZWdSRnhNQ2dZQjlOdFRnd3NHcGZkSFcwMlpjMGk5Tgo2cjhuSWIwbTg2Z2dGNVVzNGNpaHRqU0xNblg4TWZsVkl3cEtzTVZOblZaWTBLblZzNS9WeGIvaGtwbTFNaXFwCkxjbnpmeFNXMFR5dFdGNjJKM2VSK2ZlRktNLzBvSks4c2ZVc2pDQ3dvS0RsaXd0OFZCeVBYclpsTGtzNk9vSnoKZ2c5R3ZCL3o3cVlYL21MNmoyVkRwZz09Ci0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K"
      tlsCa: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURRVENDQWltZ0F3SUJBZ0lVSFAydW0yV2NUUUZoUmFLdmpObUN2bEl0UzQwd0RRWUpLb1pJaHZjTkFRRUwKQlFBd01ERXVNQ3dHQTFVRUF3d2xjM0JwWkdWeWNHOXZiQzFqYjI1MGNtOXNiR1Z5TG10MVltVXRjM2x6ZEdWdApMbk4yWXpBZUZ3MHlNakE0TVRZd09ETXhOVE5hRncwek1qQTRNVE13T0RNeE5UTmFNREF4TGpBc0JnTlZCQU1NCkpYTndhV1JsY25CdmIyd3RZMjl1ZEhKdmJHeGxjaTVyZFdKbExYTjVjM1JsYlM1emRtTXdnZ0VpTUEwR0NTcUcKU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQ3o3RWdVWjM1N3VGWDlFR2RjY0V2YVJEalZIZmtzUU5qMgo2RFV1TmNiM3A2MzVLdGFTS3htOFBLKy9zQUhTK2NjcmJ4ZW5odUdpNnE4cERjMXVQYVNwckFDTFZXZTF1NnVaCnA4T1BLd3JTcStTang3YlR1N25wYUN1MkpRZzBrc09OMmY0WlRiM1I0ZnM2Y1U3VFkvbTJiYTQ1amo0cFVkbDAKYWlLRDR6SlZVU2FKMWMvTEJFQ3J6Sjh4S24zdWs0OWNPWGE3azQvR2QveWM1SndGL0dSeHQ1MUZCbkgyRWtyYgpJWjVlWm00M1FnaDNJK2QxNjhYbEN5aFRPbnpXUzl2L1B1SDZjd1pFQWpqZlZDR0dLUjNyK1lPdkhpaFhPaDQ0CjBOVDJNNDVvbkJCc3J6aTlYYU53dzZXN0JiV1l4SjlsZEtLWHEvQTAyVG5INmlIbE8yUmxBZ01CQUFHalV6QlIKTUIwR0ExVWREZ1FXQkJSSDMzZnd3bVdQTWZ0MEN0YUduMG91VGJSQlB6QWZCZ05WSFNNRUdEQVdnQlJIMzNmdwp3bVdQTWZ0MEN0YUduMG91VGJSQlB6QVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BMEdDU3FHU0liM0RRRUJDd1VBCkE0SUJBUUJ4eHJ6Nks0YWxUM0FKMmE1V1NjWW1KNzNiWG1pNXk4REhSNmpJUFhFdW81a3NGcktQQUtmNFMwelcKa1l3T3RFRjZKZnJZbG1QYndmS2R5SnN6dzI5SlZERm1BRGlCdDZjV1FZTTdra2gydXAxTW1zcCtLaVVmRG5zWgo3WlpMMXlxcnM0aUJvTkZiS3FuSDd1bW9qRWtXc3E3NkFzMTU4ZEYwclpMWkhNb0RlMFdwTjZ1QlAydm5DTW1lCnlEdHFjSFhKSkx1VWNNRExVd3N4MmZlN0pTcHdXa2NQaHIyMmV3TnNIWG50UTZKRk9NTjNTV2lOaC9MdTVFQUUKOHlUZXBTVzgrWEwyb2pzR3NCbFludVpPWjM5eVkzVktCSE1CLzlCcGZDSkx3T2tQWWZtT2ZvZXcwTE02RElzawp5Y1U3YS9vZVFQTERCOVNOOStpbzA4azJvcEh3Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
