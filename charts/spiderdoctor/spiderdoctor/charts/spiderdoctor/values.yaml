
## @section Global parameters
##
global:
  ## @param global.imageRegistryOverride Global Docker image registry
  imageRegistryOverride: ""

  ## @param global.imageTagOverride Global Docker image tag
  imageTagOverride: ""

  ## @param global.name instance name
  ## default spiderdoctor
  name: "spiderdoctor"

  ## @param global.clusterDnsDomain cluster dns domain
  clusterDnsDomain: "cluster.local"

  ## @param global.commonAnnotations Annotations to add to all deployed objects
  commonAnnotations: {}

  ## @param global.commonLabels Labels to add to all deployed objects
  commonLabels: {}
  #  label1: v1
  #  labele: v2

  ## @param global.configName the configmap name
  configName: "spiderdoctor"

## @section feature parameters
feature:
  ## @param feature.enableIPv4 enable ipv4
  enableIPv4: true

  ## @param feature.enableIPv6 enable ipv6
  enableIPv6: false

  ## @param feature.nethttp_defaultRequest_Qps qps for kind nethttp
  nethttp_defaultRequest_Qps: 10

  ## @param feature.nethttp_defaultRequest_MaxQps qps for kind nethttp
  nethttp_defaultRequest_MaxQps: 100

  ## @param feature.nethttp_defaultRequest_DurationInSecond Duration In Second for kind nethttp
  nethttp_defaultRequest_DurationInSecond: 2

  ## @param feature.nethttp_defaultRequest_PerRequestTimeoutInMS PerRequest Timeout In MS for kind nethttp
  nethttp_defaultRequest_PerRequestTimeoutInMS: 500

  ## @param feature.nethttp_defaultFail_MeanDelayInMs mean delay in ms for kind nethttp
  nethttp_defaultFail_MeanDelayInMs: 2000

  ## @param feature.taskPollIntervalInSecond the interval to poll the task in controller and agent pod
  taskPollIntervalInSecond: 5

  ## @param feature.multusPodAnnotationKey the multus annotation key for ip status
  multusPodAnnotationKey: "k8s.v1.cni.cncf.io/networks-status"

  ## @param feature.crdMaxHistory max history items inf CRD status
  crdMaxHistory: 10

  ## aggregate report from agent for each crd
  aggregateReport:
    ## @param feature.aggregateReport.enabled aggregate report from agent for each crd
    enabled: true

    ## @param feature.aggregateReport.cleanAgedReportIntervalInMinute the interval in minute for removing aged report
    cleanAgedReportIntervalInMinute: "10"

    agent:
      ## @param feature.aggregateReport.agent.reportPath the path where the agent pod temporarily store task report.
      reportPath: "/report"

    controller:
      ## @param feature.aggregateReport.controller.reportHostPath storage path when pvc is disabled
      reportHostPath: "/var/run/spiderdoctor/reports"

      ## @param feature.aggregateReport.controller.maxAgeInDay report file maximum age in days
      maxAgeInDay: 30

      ## @param feature.aggregateReport.controller.collectAgentReportIntervalInSecond how long the controller collects all agent report at interval in second
      collectAgentReportIntervalInSecond: 600

      # for store report
      pvc:
        ## @param feature.aggregateReport.controller.pvc.enabled store report to pvc
        enabled: false

        ## @param feature.aggregateReport.controller.pvc.storageClass storage class name
        storageClass: ""

        ## @param feature.aggregateReport.controller.pvc.storageRequests storage request
        storageRequests: "100Mi"

        ## @param feature.aggregateReport.controller.pvc.storageLimits storage limit
        storageLimits: "1024Mi"

## @section spiderdoctorAgent parameters
##
spiderdoctorAgent:
  ## @param spiderdoctorAgent.name the spiderdoctorAgent name
  name: "spiderdoctor-agent"

  ## @param spiderdoctorAgent.cmdBinName the binary name of spiderdoctorAgent
  cmdBinName: "/usr/bin/agent"

  ## @param spiderdoctorAgent.hostnetwork enable hostnetwork mode of spiderdoctorAgent pod
  hostnetwork: false

  image:
    ## @param spiderdoctorAgent.image.registry the image registry of spiderdoctorAgent
    registry: ghcr.io

    ## @param spiderdoctorAgent.image.repository the image repository of spiderdoctorAgent
    repository: spidernet-io/spiderdoctor-agent

    ## @param spiderdoctorAgent.image.pullPolicy the image pullPolicy of spiderdoctorAgent
    pullPolicy: IfNotPresent

    ## @param spiderdoctorAgent.image.digest the image digest of spiderdoctorAgent, which takes preference over tag
    digest: ""

    ## @param spiderdoctorAgent.image.tag the image tag of spiderdoctorAgent, overrides the image tag whose default is the chart appVersion.
    tag: ""

    ## @param spiderdoctorAgent.image.imagePullSecrets the image imagePullSecrets of spiderdoctorAgent
    imagePullSecrets: []
    # - name: "image-pull-secret"

  ## @skip spiderdoctorAgent.nodeSelector.kubernetes.io/os
  nodeSelector:
    kubernetes.io/os: linux

  serviceAccount:
    ## @param spiderdoctorAgent.serviceAccount.create create the service account for the spiderdoctorAgent
    create: true
    ## @param spiderdoctorAgent.serviceAccount.annotations the annotations of spiderdoctorAgent service account
    annotations: {}

  ## @skip spiderdoctorAgent.updateStrategy.rollingUpdate.maxUnavailable
  ## @skip spiderdoctorAgent.updateStrategy.type
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate

  service:
    ## @param spiderdoctorAgent.service.annotations the annotations for spiderdoctorAgent service
    annotations: {}
    ## @param spiderdoctorAgent.service.type the type for spiderdoctorAgent service
    type: LoadBalancer
    #type: ClusterIP

  ingress:
    ## @param spiderdoctorAgent.ingress.enable install ingress
    enable: true

    ## @param spiderdoctorAgent.ingress.ingressClass ingress class name
    ingressClass: ""

    ## @param spiderdoctorAgent.ingress.route the route of agent ingress. Default to "/spiderdoctoragent", if it changes, ingress please re-write url forwarded to "/spiderdoctoragent"
    route: "/spiderdoctoragent"

  ## @skip spiderdoctorAgent.tolerations
  # --  Node tolerations
  # ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
  tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    - key: node.kubernetes.io/not-ready
      effect: NoSchedule
    - key: node-role.kubernetes.io/master
      effect: NoSchedule
    - key: node-role.kubernetes.io/control-plane
      effect: NoSchedule
    - key: CriticalAddonsOnly
      operator: Exists

  ## @param spiderdoctorAgent.priorityClassName the priority Class Name for spiderdoctorAgent
  priorityClassName: "system-node-critical"

  reportHostPath: "/var/run/spiderdoctor/agent"

  ## @param spiderdoctorAgent.affinity the affinity of spiderdoctorAgent
  affinity: {}

  ## @param spiderdoctorAgent.extraArgs the additional arguments of spiderdoctorAgent container
  extraArgs: []

  ## @param spiderdoctorAgent.extraEnv the additional environment variables of spiderdoctorAgent container
  extraEnv: []

  ## @param spiderdoctorAgent.extraVolumes the additional volumes of spiderdoctorAgent container
  extraVolumes: []

  ## @param spiderdoctorAgent.extraVolumeMounts the additional hostPath mounts of spiderdoctorAgent container
  extraVolumeMounts: []

  ## @param spiderdoctorAgent.podAnnotations the additional annotations of spiderdoctorAgent pod
  podAnnotations: {}

  ## @param spiderdoctorAgent.podLabels the additional label of spiderdoctorAgent pod
  podLabels: {}

  resources:
    ## @param spiderdoctorAgent.resources.limits.cpu the cpu limit of spiderdoctorAgent pod
    ## @param spiderdoctorAgent.resources.limits.memory the memory limit of spiderdoctorAgent pod
    ## @param spiderdoctorAgent.resources.requests.cpu the cpu requests of spiderdoctorAgent pod
    ## @param spiderdoctorAgent.resources.requests.memory the memory requests of spiderdoctorAgent pod
    limits:
      cpu: 1000m
      memory: 1024Mi
    requests:
      cpu: 100m
      memory: 128Mi

  ## @param spiderdoctorAgent.securityContext the security Context of spiderdoctorAgent pod
  securityContext: {}
  # runAsUser: 0

  grpcServer:
    ## @param spiderdoctorAgent.grpcServer.port the Port for grpc server
    port: 3000

  httpServer:
    ## @param spiderdoctorAgent.httpServer.port the http Port for spiderdoctorAgent, for health checking
    port: 80

    startupProbe:
      ## @param spiderdoctorAgent.httpServer.startupProbe.failureThreshold the failure threshold of startup probe for spiderdoctorAgent health checking
      failureThreshold: 60
      ## @param spiderdoctorAgent.httpServer.startupProbe.periodSeconds the period seconds of startup probe for spiderdoctorAgent health checking
      periodSeconds: 2

    livenessProbe:
      ## @param spiderdoctorAgent.httpServer.livenessProbe.failureThreshold the failure threshold of startup probe for spiderdoctorAgent health checking
      failureThreshold: 6
      ## @param spiderdoctorAgent.httpServer.livenessProbe.periodSeconds the period seconds of startup probe for spiderdoctorAgent health checking
      periodSeconds: 10

    readinessProbe:
      ## @param spiderdoctorAgent.httpServer.readinessProbe.failureThreshold the failure threshold of startup probe for spiderdoctorAgent health checking
      failureThreshold: 3
      ## @param spiderdoctorAgent.httpServer.readinessProbe.periodSeconds the period seconds of startup probe for spiderdoctorAgent health checking
      periodSeconds: 10

  prometheus:
    ## @param spiderdoctorAgent.prometheus.enabled enable template agent to collect metrics
    enabled: false

    ## @param spiderdoctorAgent.prometheus.port the metrics port of template agent
    port: 5711

    serviceMonitor:
      ## @param spiderdoctorAgent.prometheus.serviceMonitor.install install serviceMonitor for template agent. This requires the prometheus CRDs to be available
      install: false

      ## @param spiderdoctorAgent.prometheus.serviceMonitor.namespace the serviceMonitor namespace. Default to the namespace of helm instance
      namespace: ""

      ## @param spiderdoctorAgent.prometheus.serviceMonitor.annotations the additional annotations of spiderdoctorAgent serviceMonitor
      annotations: {}

      ## @param spiderdoctorAgent.prometheus.serviceMonitor.labels the additional label of spiderdoctorAgent serviceMonitor
      labels: {}

    prometheusRule:
      ## @param spiderdoctorAgent.prometheus.prometheusRule.install install prometheusRule for template agent. This requires the prometheus CRDs to be available
      install: false

      ## @param spiderdoctorAgent.prometheus.prometheusRule.namespace the prometheusRule namespace. Default to the namespace of helm instance
      namespace: ""

      ## @param spiderdoctorAgent.prometheus.prometheusRule.annotations the additional annotations of spiderdoctorAgent prometheusRule
      annotations: {}

      ## @param spiderdoctorAgent.prometheus.prometheusRule.labels the additional label of spiderdoctorAgent prometheusRule
      labels: {}

    grafanaDashboard:
      ## @param spiderdoctorAgent.prometheus.grafanaDashboard.install install grafanaDashboard for template agent. This requires the prometheus CRDs to be available
      install: false

      ## @param spiderdoctorAgent.prometheus.grafanaDashboard.namespace the grafanaDashboard namespace. Default to the namespace of helm instance
      namespace: ""

      ## @param spiderdoctorAgent.prometheus.grafanaDashboard.annotations the additional annotations of spiderdoctorAgent grafanaDashboard
      annotations: {}

      ## @param spiderdoctorAgent.prometheus.grafanaDashboard.labels the additional label of spiderdoctorAgent grafanaDashboard
      labels: {}

  debug:
    ## @param spiderdoctorAgent.debug.logLevel the log level of template agent [debug, info, warn, error, fatal, panic]
    logLevel: "info"
    ## @param spiderdoctorAgent.debug.gopsPort the gops port of template agent
    gopsPort: 5712

## @section spiderdoctorController parameters
##
spiderdoctorController:
  ## @param spiderdoctorController.name the spiderdoctorController name
  name: "spiderdoctor-controller"

  ## @param spiderdoctorController.replicas the replicas number of spiderdoctorController pod
  replicas: 1

  ## @param spiderdoctorController.binName the binName name of spiderdoctorController
  cmdBinName: "/usr/bin/controller"

  ## @param spiderdoctorController.hostnetwork enable hostnetwork mode of spiderdoctorController pod. Notice, if no CNI available before template installation, must enable this
  hostnetwork: false

  image:
    ## @param spiderdoctorController.image.registry the image registry of spiderdoctorController
    registry: ghcr.io

    ## @param spiderdoctorController.image.repository the image repository of spiderdoctorController
    repository: spidernet-io/spiderdoctor-controller

    ## @param spiderdoctorController.image.pullPolicy the image pullPolicy of spiderdoctorController
    pullPolicy: IfNotPresent

    ## @param spiderdoctorController.image.digest the image digest of spiderdoctorController, which takes preference over tag
    digest: ""

    ## @param spiderdoctorController.image.tag the image tag of spiderdoctorController, overrides the image tag whose default is the chart appVersion.
    tag: ""

    ## @param spiderdoctorController.image.imagePullSecrets the image imagePullSecrets of spiderdoctorController
    imagePullSecrets: []
    # - name: "image-pull-secret"

  ## @skip spiderdoctorController.nodeSelector.kubernetes.io/os
  nodeSelector:
    kubernetes.io/os: linux

  serviceAccount:
    ## @param spiderdoctorController.serviceAccount.create create the service account for the spiderdoctorController
    create: true
    ## @param spiderdoctorController.serviceAccount.annotations the annotations of spiderdoctorController service account
    annotations: {}

  service:
    ## @param spiderdoctorController.service.annotations the annotations for spiderdoctorController service
    annotations: {}
    ## @param spiderdoctorController.service.type the type for spiderdoctorController service
    type: ClusterIP

  ## @skip spiderdoctorController.tolerations
  tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    - key: node.kubernetes.io/not-ready
      effect: NoSchedule
    - key: node-role.kubernetes.io/master
      effect: NoSchedule
    - key: node-role.kubernetes.io/control-plane
      effect: NoSchedule
    - key: CriticalAddonsOnly
      operator: Exists

  ## @param spiderdoctorController.priorityClassName the priority Class Name for spiderdoctorController
  priorityClassName: "system-node-critical"

  ## @param spiderdoctorController.affinity the affinity of spiderdoctorController
  affinity: {}

  ## @param spiderdoctorController.extraArgs the additional arguments of spiderdoctorController container
  extraArgs: []

  ## @param spiderdoctorController.extraEnv the additional environment variables of spiderdoctorController container
  extraEnv: []

  ## @param spiderdoctorController.extraVolumes the additional volumes of spiderdoctorController container
  extraVolumes: []
    # - name: test-val
  #   mountPath: /host/tmp

  ## @param spiderdoctorController.extraVolumeMounts the additional hostPath mounts of spiderdoctorController container
  extraVolumeMounts: []
    # - name: test-val
  #   mountPath: /tmp

  ## @param spiderdoctorController.podAnnotations the additional annotations of spiderdoctorController pod
  podAnnotations: {}
  # test: 100

  ## @param spiderdoctorController.podLabels the additional label of spiderdoctorController pod
  podLabels: {}

  ## @param spiderdoctorController.securityContext the security Context of spiderdoctorController pod
  securityContext: {}
  # runAsUser: 0

  resources:
    ## @param spiderdoctorController.resources.limits.cpu the cpu limit of spiderdoctorController pod
    ## @param spiderdoctorController.resources.limits.memory the memory limit of spiderdoctorController pod
    ## @param spiderdoctorController.resources.requests.cpu the cpu requests of spiderdoctorController pod
    ## @param spiderdoctorController.resources.requests.memory the memory requests of spiderdoctorController pod
    limits:
      cpu: 500m
      memory: 1024Mi
    requests:
      cpu: 100m
      memory: 128Mi

  podDisruptionBudget:
    ## @param spiderdoctorController.podDisruptionBudget.enabled enable podDisruptionBudget for spiderdoctorController pod
    enabled: false

    ## @param spiderdoctorController.podDisruptionBudget.minAvailable minimum number/percentage of pods that should remain scheduled.
    minAvailable: 1

  httpServer:
    ## @param spiderdoctorController.port the http Port for spiderdoctorController, for health checking and http service
    port: 80

    startupProbe:
      ## @param spiderdoctorController.httpServer.startupProbe.failureThreshold the failure threshold of startup probe for spiderdoctorController health checking
      failureThreshold: 30

      ## @param spiderdoctorController.httpServer.startupProbe.periodSeconds the period seconds of startup probe for spiderdoctorController health checking
      periodSeconds: 2

    livenessProbe:
      ## @param spiderdoctorController.httpServer.livenessProbe.failureThreshold the failure threshold of startup probe for spiderdoctorController health checking
      failureThreshold: 6

      ## @param spiderdoctorController.httpServer.livenessProbe.periodSeconds the period seconds of startup probe for spiderdoctorController health checking
      periodSeconds: 10

    readinessProbe:
      ## @param spiderdoctorController.httpServer.readinessProbe.failureThreshold the failure threshold of startup probe for spiderdoctorController health checking
      failureThreshold: 3

      ## @param spiderdoctorController.httpServer.readinessProbe.periodSeconds the period seconds of startup probe for spiderdoctorController health checking
      periodSeconds: 10

  ## @param spiderdoctorController.webhookPort the http port for spiderdoctorController webhook
  webhookPort: 5722

  prometheus:
    ## @param spiderdoctorController.prometheus.enabled enable template Controller to collect metrics
    enabled: false

    ## @param spiderdoctorController.prometheus.port the metrics port of template Controller
    port: 5721

    serviceMonitor:
      ## @param spiderdoctorController.prometheus.serviceMonitor.install install serviceMonitor for template agent. This requires the prometheus CRDs to be available
      install: false

      ## @param spiderdoctorController.prometheus.serviceMonitor.namespace the serviceMonitor namespace. Default to the namespace of helm instance
      namespace: ""

      ## @param spiderdoctorController.prometheus.serviceMonitor.annotations the additional annotations of spiderdoctorController serviceMonitor
      annotations: {}

      ## @param spiderdoctorController.prometheus.serviceMonitor.labels the additional label of spiderdoctorController serviceMonitor
      labels: {}

    prometheusRule:
      ## @param spiderdoctorController.prometheus.prometheusRule.install install prometheusRule for template agent. This requires the prometheus CRDs to be available
      install: false

      ## @param spiderdoctorController.prometheus.prometheusRule.namespace the prometheusRule namespace. Default to the namespace of helm instance
      namespace: ""

      ## @param spiderdoctorController.prometheus.prometheusRule.annotations the additional annotations of spiderdoctorController prometheusRule
      annotations: {}

      ## @param spiderdoctorController.prometheus.prometheusRule.labels the additional label of spiderdoctorController prometheusRule
      labels: {}

    grafanaDashboard:
      ## @param spiderdoctorController.prometheus.grafanaDashboard.install install grafanaDashboard for template agent. This requires the prometheus CRDs to be available
      install: false

      ## @param spiderdoctorController.prometheus.grafanaDashboard.namespace the grafanaDashboard namespace. Default to the namespace of helm instance
      namespace: ""

      ## @param spiderdoctorController.prometheus.grafanaDashboard.annotations the additional annotations of spiderdoctorController grafanaDashboard
      annotations: {}

      ## @param spiderdoctorController.prometheus.grafanaDashboard.labels the additional label of spiderdoctorController grafanaDashboard
      labels: {}

  debug:
    ## @param spiderdoctorController.debug.logLevel the log level of template Controller [debug, info, warn, error, fatal, panic]
    logLevel: "info"

    ## @param spiderdoctorController.debug.gopsPort the gops port of template Controller
    gopsPort: 5724

  ## TLS configuration for webhook
  tls:
    ## @param spiderdoctorController.tls.method the method for generating TLS certificates. [ provided , certmanager , auto]
    ## - provided:     provide all certificates by helm options
    ## - certmanager:  This method use cert-manager to generate & rotate certificates.
    ## - auto:         Auto generate cert.
    method: auto

    ## @param spiderdoctorController.tls.secretName the secret name for storing TLS certificates
    secretName: "template-controller-server-certs"

    ## for certmanager method
    certmanager:
      ## @param spiderdoctorController.tls.certmanager.certValidityDuration generated certificates validity duration in days for 'certmanager' method
      certValidityDuration: 365

      ## @param spiderdoctorController.tls.certmanager.issuerName issuer name of cert manager 'certmanager'. If not specified, a CA issuer will be created.
      issuerName: ""

      ## @param spiderdoctorController.tls.certmanager.extraDnsNames extra DNS names added to certificate when it's auto generated
      extraDnsNames: []

      ## @param spiderdoctorController.tls.certmanager.extraIPAddresses extra IP addresses added to certificate when it's auto generated
      extraIPAddresses: []

    ## for provided method
    provided:
      ## @param spiderdoctorController.tls.provided.tlsCert encoded tls certificate for provided method
      ## @param spiderdoctorController.tls.provided.tlsKey encoded tls key for provided method
      ## @param spiderdoctorController.tls.provided.tlsCa encoded tls CA for provided method
      tlsCert: ""
      tlsKey: ""
      tlsCa: ""

    ## for auto method
    auto:
      ## @param spiderdoctorController.tls.auto.caExpiration ca expiration for auto method
      # in day , default 200 years
      caExpiration: '73000'

      ## @param spiderdoctorController.tls.auto.certExpiration server cert expiration for auto method
      # in day, default 200 years
      certExpiration: '73000'

      ## @param spiderdoctorController.tls.auto.extraIpAddresses extra IP addresses of server certificate for auto method
      extraIpAddresses: []

      ## @param spiderdoctorController.tls.auto.extraDnsNames extra DNS names of server cert for auto method
      extraDnsNames: []
