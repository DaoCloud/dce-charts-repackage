# Default values for openbao.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

global:
  ingress:
    annotations: {}
    provider: nginx

image:
  # For now use UBI OpenBao, but we switch to CNG build once available.
  # https://gitlab.com/groups/gitlab-org/distribution/-/epics/113.
  repository: quay.io/openbao/openbao-ubi
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

role:
  create: true

podAnnotations: {}
podLabels: {}

podSecurityContext:
  fsGroup: 1000
  runAsUser: 1000
  seccompProfile:
    type: "RuntimeDefault"

securityContext:
  capabilities:
    drop: [ "ALL" ]
  runAsNonRoot: true
  allowPrivilegeEscalation: false
  runAsUser: 1000

serviceActive:
  type: ClusterIP
  annotations: {}

serviceInactive:
  type: ClusterIP
  annotations: {}

ingress:
  enabled: true
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hostname: "openbao.example.com"
  tls:
    enabled: true
    secretName: ''
  configureCertmanager: true
  certmanagerIssuerRef:
    name: ''
    kind: Issuer

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# initializeTpl is evaluated as a helm/go template and converted from YAML to JSON
# before being passed as OpenBao Self-Initialization configuration:
#   https://openbao.org/docs/configuration/self-init/
initializeTpl: |
  - gitlab-auth:
      request:
      - oidc:
          operation: create
          path: sys/auth/gitlab_rails_jwt
          allow_failure: false
          data:
            type: jwt
      - oidc-config:
          operation: create
          path: auth/gitlab_rails_jwt/config
          allow_failure: false
          data:
            oidc_discovery_url: {{ tpl .Values.config.initialize.oidcDiscoveryUrl . }}
            bound_issuer: {{ tpl .Values.config.initialize.boundIssuer . }}
            skip_jwks_validation: true
      - manager-policy:
          operation: create
          path: sys/policies/acl/secrets_manager
          allow_failure: false
          data:
            policy: 'path "*" { capabilities = ["create", "read", "update", "delete", "list", "sudo"] }'
      - manager-role:
          operation: create
          path: auth/gitlab_rails_jwt/role/app
          allow_failure: false
          data:
            role_type: jwt
            bound_audiences: {{ tpl .Values.config.initialize.boundAudiences . }}
            user_claim: user_id
            token_policies: secrets_manager

auditTpl: |
  - file:
      stdout:
        description: "Stdout audit device"
        options:
          file_path: "/dev/stdout"
          log_raw: "true"

config:
  ui: true
  clusterPort: 8201
  apiPort: 8200
  tlsDisable: false
  telemetry:
    # Enable/disable telemetry on all listeners.
    enabled: true
    disableHostname: true
    prometheusRetentionTime: "24h"
    metricsPrefix: openbao
  # Configure additional listener for metrics. Implicitly disabled if telemetry is disabled.
  # Note: This listener serves the regular OpenBao API but needs no authentication of the metrics path by default.
  metricsListener:
    enabled: true
    tlsDisable: false
    port: 8209
    unauthenticatedMetricsAccess: true
  unseal:
    static:
      enabled: true
      currentKeyId: "static-unseal-0"
      currentKey: "/srv/openbao/keys/static-unseal-1"
      # Optionally configure a previous key for rotation purposes. Needs and extra volume mount to the previous key path and a non-nil id.
      previousKeyId: ""
      previousKey: "/srv/openbao/keys/static-unseal-0"
  initialize:
    enabled: true
    oidcDiscoveryUrl: "https://gitlab.example.com"
    boundIssuer: "https://gitlab.example.com"
    boundAudiences: '{{ include "gitlab.openbao.url" . }}'
  storage:
    postgresql:
      # table:
      # maxIdleConnections:
      # maxParallel:
      # haTable:
      # skipCreateTable
      # maxConnectRetries
      haEnabled: true

      connection:
        host: "localhost"
        port: 5432
        database: openbao
        username: openbao
        connectTimeout:
        keepalives:
        keepalivesIdle:
        keepalivesInterval:
        keepalivesCount:
        tcpUserTimeout:
        sslMode: "disable"
        password: {}
        # secret:
        # key:

# Generate a static unseal secret that will be mounted to
# the path of the "current_key" path of the OpenBao config.
staticUnsealSecret:
  generate: true

extraVolumes: ""
extraVolumeMounts: ""

livenessProbe:
  httpGet:
    path: "/v1/sys/health?standbyok=true"
    port: api
    scheme: HTTPS
  failureThreshold: 30
  initialDelaySeconds: 5
  periodSeconds: 2
  successThreshold: 1
  timeoutSeconds: 3
readinessProbe:
  httpGet:
    path: "/v1/sys/health?standbyok=true"
    port: api
    scheme: HTTPS
  failureThreshold: 20
  initialDelaySeconds: 5
  periodSeconds: 5
  successThreshold: 1
  timeoutSeconds: 3

autoscaling:
  minReplicas: 2
  maxReplicas: 4
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
