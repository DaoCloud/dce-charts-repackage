# child values
spiderpool:
  # Default values for spiderpool.
  # This is a YAML-formatted file.
  # Declare variables to be passed into your templates.
  
  ipFamily:
    enableIPv4: true
    enableIPv6: true
  
  rbac:
    # -- Enable creation of Resource-Based Access Control configuration.
    create: true
  
  # default spiderpool
  nameOverride: ""
  
  clusterDnsDomain: "cluster.local"
  
  ## @param commonAnnotations Annotations to add to all deployed objects
  ##
  commonAnnotations: {}
  #  annotation1: v1
  #  annotation2: v2
  
  ## @param commonLabels Labels to add to all deployed objects
  ##
  commonLabels: {}
  #  label1: v1
  #  labele: v2
  
  ipamPlugin:
    # -- Configure the path to the configuration directory on the host.
    confPath: /etc/cni/net.d/spiderpool
    binPath: /opt/cni/bin
  
    # -- Configure the path to the binary directory on the host.
    ipamBinPath: /opt/cni/bin
  
    # -- Configure the unix socket path to connect with the spiderpool agent.
    ipamUNIXSocketDir: /var/run/spidernet
    ipamUNIXSocketPath: /var/run/spidernet/spiderpool.sock
  
  clusterDefaultPool:
    installIPv4IPPool: false
    installIPv6IPPool: false
    ipv4IPPoolName: "default-v4-ippool"
    ipv6IPPoolName: "default-v6-ippool"
    ipv4Subnet: ""
    ipv6Subnet: ""
    ipv4IPRanges: []
    ipv6IPRanges: []
  
  configmap:
    configCmName: "spiderpool-conf"
  
    config:
      # -- Unix domain socket path to listen for ipam plugin.
      ipamUnixSocketPath: /var/run/spidernet/spiderpool.sock
      networkMode: legacy
      enableStatefulSet: true
  
  spiderpoolAgent:
    name: "spiderpool-agent"
  
    binName: "spiderpool-agent"
  
    image:
      repository: ghcr.io/spidernet-io/spiderpool/spiderpool-agent
      pullPolicy: IfNotPresent
      # take preference over tag
      digest: ""
      # Overrides the image tag whose default is the chart appVersion.
      tag: v0.0.8
      imagePullSecrets: []
      # - name: "image-pull-secret"
  
    nodeSelector:
      kubernetes.io/os: linux
  
    nameOverride: ""
  
    serviceAccount:
      create: true
      annotations: {}
  
    # -- http Port to listen to for health checking
    healthPort: 5710
  
    updateStrategy:
      rollingUpdate:
        maxUnavailable: 2
      type: RollingUpdate
  
    service:
      # Optional annotations to add to the Service
      annotations: {}
      type: ClusterIP
  
    # --  Node tolerations
    # ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
    tolerations:
      - effect: NoExecute
        key: node.kubernetes.io/not-ready
        operator: Exists
      - effect: NoExecute
        key: node.kubernetes.io/unreachable
        operator: Exists
      - effect: NoSchedule
        key: node.kubernetes.io/disk-pressure
        operator: Exists
      - effect: NoSchedule
        key: node.kubernetes.io/memory-pressure
        operator: Exists
      - effect: NoSchedule
        key: node.kubernetes.io/pid-pressure
        operator: Exists
      - effect: NoSchedule
        key: node.kubernetes.io/unschedulable
        operator: Exists
      - effect: NoSchedule
        key: node.kubernetes.io/network-unavailable
        operator: Exists
      - key: node.kubernetes.io/not-ready
        effect: NoSchedule
      - key: node-role.kubernetes.io/master
        effect: NoSchedule
      - key: node-role.kubernetes.io/control-plane
        effect: NoSchedule
      - key: CriticalAddonsOnly
        operator: Exists
  
    priorityClassName: ""
  
    affinity: {}
  
    # -- Additional container arguments.
    extraArgs: []
  
    # -- Additional container environment variables.
    extraEnv: []
  
    # -- Additional agent hostPath mounts.
    extraHostPathMounts: []
      # - name: host-mnt-data
      #   mountPath: /host/mnt/data
      #   hostPath: /mnt/data
      #   hostPathType: Directory
      #   readOnly: true
      #   mountPropagation: HostToContainer
  
    # -- Additional agent volumes.
    extraVolumes: []
  
    # -- Additional agent volumeMounts.
    extraVolumeMounts: []
  
    # -- Annotations to be added to agent pods
    podAnnotations: {}
  
    # -- Labels to be added to agent pods
    podLabels: {}
  
    # -- Configure the path to where to mount the ConfigMap inside the agent pod.
    confFileMountPath: /tmp/cni-configuration
  
    resources:
      # We usually recommend not to specify default resources and to leave this as a conscious
      # choice for the user. This also increases chances charts run on environments with little
      # resources, such as Minikube. If you do want to specify resources, uncomment the following
      # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
      limits:
        cpu: 1000m
        memory: 1024Mi
      requests:
        cpu: 100m
        memory: 128Mi
  
    # -- Security context to be added to agent pods
    securityContext: {}
    # runAsUser: 0
  
    # -- Configure the path to where the CNI configuration directory is mounted
    # inside the agent pod.
    hostConfDirMountPath: /host/etc/cni/net.d/spiderpool
  
    healthChecking:
      startupProbe:
        # -- failure threshold of startup probe.
        # 105 x 2s translates to the old behaviour of the readiness probe (120s delay + 30 x 3s)
        failureThreshold: 60
        # -- interval between checks of the startup probe
        periodSeconds: 2
  
      livenessProbe:
        # -- failure threshold of liveness probe
        failureThreshold: 6
        # -- interval between checks of the liveness probe
        periodSeconds: 10
  
      readinessProbe:
        # -- failure threshold of readiness probe
        failureThreshold: 3
        # -- interval between checks of the readiness probe
        periodSeconds: 10
  
    # -- Enable prometheus metrics for cilium-operator on the configured port at
    # /metrics
    prometheus:
      # -- Enable service monitors.
      # This requires the prometheus CRDs to be available (see https://github.com/prometheus-operator/prometheus-operator/blob/master/example/prometheus-operator-crd/monitoring.coreos.com_servicemonitors.yaml)
      enabled: false
      port: 5711
      serviceMonitor:
        labels: {}
        annotations: {}
      prometheusRule:
        # enable alter rules
        enabled: false
  
    debug:
      # debug, info, warn, error, fatal, panic
      logLevel: "info"
      gopsPort: 5712
  
  spiderpoolController:
    name: "spiderpool-controller"
  
    replicas: 1
  
    binName: "spiderpool-controller"
  
    # ippool is not installed when installation , so have to be hostnetwork
    hostnetwork: true
  
    nameOverride: ""
  
    image:
      repository: ghcr.io/spidernet-io/spiderpool/spiderpool-controller
      pullPolicy: IfNotPresent
      # take preference over tag
      digest: ""
      # digest: "sha256:251ff274acf22fd2067b29a31e9fda94253d2961c061577203621583d7e85bd2"
      # Overrides the image tag whose default is the chart appVersion.
      tag: v0.0.8
      imagePullSecrets: []
      # - name: "image-pull-secret"
  
    nodeSelector:
      kubernetes.io/os: linux
  
    affinity: {}
  
    serviceAccount:
      create: true
      name: ""
      annotations: {}
  
    service:
      # Optional annotations to add to the Service
      annotations: {}
      type: ClusterIP
  
    tolerations:
      - effect: NoExecute
        key: node.kubernetes.io/not-ready
        operator: Exists
      - effect: NoExecute
        key: node.kubernetes.io/unreachable
        operator: Exists
      - effect: NoSchedule
        key: node.kubernetes.io/disk-pressure
        operator: Exists
      - effect: NoSchedule
        key: node.kubernetes.io/memory-pressure
        operator: Exists
      - effect: NoSchedule
        key: node.kubernetes.io/pid-pressure
        operator: Exists
      - effect: NoSchedule
        key: node.kubernetes.io/unschedulable
        operator: Exists
      - effect: NoSchedule
        key: node.kubernetes.io/network-unavailable
        operator: Exists
      - key: node.kubernetes.io/not-ready
        effect: NoSchedule
      - key: node-role.kubernetes.io/master
        effect: NoSchedule
      - key: node-role.kubernetes.io/control-plane
        effect: NoSchedule
      - key: CriticalAddonsOnly
        operator: Exists
  
    priorityClassName: ""
  
    # -- Additional container arguments.
    extraArgs: []
  
    # -- Additional container environment variables.
    extraEnv: []
  
    # -- Additional agent hostPath mounts.
    extraHostPathMounts: []
      # - name: host-mnt-data
      #   mountPath: /host/mnt/data
      #   hostPath: /mnt/data
      #   hostPathType: Directory
      #   readOnly: true
    #   mountPropagation: HostToContainer
  
    # -- Additional agent volumes.
    extraVolumes: []
      # - name: test-val
      #   mountPath: /host/tmp
  
    # -- Additional agent volumeMounts.
    extraVolumeMounts: []
      # - name: test-val
      #   mountPath: /tmp
  
    # -- Annotations to be added to agent pods
    podAnnotations: {}
      # test: 100
  
    # -- Labels to be added to agent pods
    podLabels: {}
  
    # -- security context
    securityContext: {}
    # runAsUser: 0
  
    resources:
      # We usually recommend not to specify default resources and to leave this as a conscious
      # choice for the user. This also increases chances charts run on environments with little
      # resources, such as Minikube. If you do want to specify resources, uncomment the following
      # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
      limits:
        cpu: 500m
        memory: 1024Mi
      requests:
        cpu: 100m
        memory: 128Mi
  
    # PodDisruptionBudget settings
    podDisruptionBudget:
      # -- enable PodDisruptionBudget
      # ref: https://kubernetes.io/docs/concepts/workloads/pods/disruptions/
      enabled: false
      # -- Minimum number/percentage of pods that should remain scheduled.
      # When it's set, maxUnavailable must be disabled by `maxUnavailable: null`
      minAvailable: 1
      # -- Maximum number/percentage of pods that may be made unavailable
     # maxUnavailable: 1
  
    healthChecking:
      startupProbe:
        # -- failure threshold of startup probe.
        # 105 x 2s translates to the old behaviour of the readiness probe (120s delay + 30 x 3s)
        failureThreshold: 30
        # -- interval between checks of the startup probe
        periodSeconds: 2
  
      livenessProbe:
        # -- failure threshold of liveness probe
        failureThreshold: 6
        # -- interval between checks of the liveness probe
        periodSeconds: 10
  
      readinessProbe:
        # -- failure threshold of readiness probe
        failureThreshold: 3
        # -- interval between checks of the readiness probe
        periodSeconds: 10
  
    # -- http Port to listen to for health checking
    healthPort: 5720
  
    # -- https Port to listen to webhook
    webhookPort: 5722
  
    # -- https Port to listen to cli command
    cliPort: 5723
  
    # -- Enable prometheus metrics for cilium-operator on the configured port at
    # /metrics
    prometheus:
      enabled: false
      port: 5721
      serviceMonitor:
        # -- Enable service monitors.
        # This requires the prometheus CRDs to be available (see https://github.com/prometheus-operator/prometheus-operator/blob/master/example/prometheus-operator-crd/monitoring.coreos.com_servicemonitors.yaml)
        enabled: false
        labels: {}
        annotations: {}
      prometheusRule:
        # enable alter rules
        enabled: false
  
    debug:
      # debug, info, warn, error, fatal, panic
      logLevel: "info"
      gopsPort: 5724
  
    gc:
      # global enable
      enabled: true
      # if enabled=false, ignore this
      gcTerminatingPodIPEnabled: true
      # delay to gc pod ip after pod graceful time, second
      gcTerminatingPodIPDelay: 0
      # if enabled=false, ignore this
      gcEvictedPodIPEnabled: true
      # delay to gc pod ip after pod graceful time, second
      gcEvictedPodIPDelay: 0
  
    # -- TLS configuration for webhook
    tls:
      # -- Set the method to auto-generate certificates. Supported values:
      # - provided:     provide all certificates by helm options
      # - certmanager:  This method use cert-manager to generate & rotate certificates.
      method: provided
  
      # the secret with same namespace
      secretName: "spiderpool-controller-server-certs"
  
      # for certmanager method
      certmanager:
        # -- Generated certificates validity duration in days.
        certValidityDuration: 365
  
        # If not specified, a CA issuer will be created.
        # used by method certmanager
        issuerName: ""
  
        # -- Extra DNS names added to certificate when it's auto generated
        extraDnsNames: []
        # -- Extra IP addresses added to certificate when it's auto generated
        extraIPAddresses: []
  
      # -- for provided method
      server:
        # used by method provided
        # encoded
        tlsCert: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUVEekNDQXZlZ0F3SUJBZ0lVYWQ0V2pHdVFWN1UxUkRWUEh4ZTgxVUd6Z05vd0RRWUpLb1pJaHZjTkFRRUwKQlFBd01ERXVNQ3dHQTFVRUF3d2xjM0JwWkdWeWNHOXZiQzFqYjI1MGNtOXNiR1Z5TG10MVltVXRjM2x6ZEdWdApMbk4yWXpBZUZ3MHlNakE0TVRnd05ETTFNekphRncwek1qQTRNVFV3TkRNMU16SmFNREF4TGpBc0JnTlZCQU1NCkpYTndhV1JsY25CdmIyd3RZMjl1ZEhKdmJHeGxjaTVyZFdKbExYTjVjM1JsYlM1emRtTXdnZ0VpTUEwR0NTcUcKU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQ2NsdHpMYXhva244ZFphZHRMWnlCc2FKS2pUTURxazBQaQp4clZJTHZVKzF1dG5LZlNaVjg5bFI1aitZMGExdWY0Q2hGbWNHK1dxQXRHMi95eHgyUlk5QlU4L0pka1pLdmw3CjV3ZE5QVWNWblRobEZXYStjb3hKdHhMa3pWcFJETFdUR3JrazVQZ3l2TE1DSVlPMEtPbktRT0ZheHlndWdUOWMKVGZXQXdiVU41OTQrZFArMWFQQm9sc0M0WG15Z0lpSGs3Nlc3MXpteXo5cENZYlBmRmxqNTc2a3BYYkFVUWxNQgpsaVJJWWZIUEZ0ZGZmOU5zMG9SQjBlZ0dBY053M0J0d1VNRm9sa0N2YjNSUmFQWGxwWkJSQmZISnZzYVNUT0pGCnN3Q3FLMlUvcXFKcnVLRWNPVnN3aHh2THF1TEhBUGJPQXlhS3BPakQ0d3NJdVE3YWVMa2hBZ01CQUFHamdnRWYKTUlJQkd6QUpCZ05WSFJNRUFqQUFNQXNHQTFVZER3UUVBd0lGNERBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjRApBZ1lJS3dZQkJRVUhBd0V3Z2FFR0ExVWRFUVNCbVRDQmxvSVZjM0JwWkdWeWNHOXZiQzFqYjI1MGNtOXNiR1Z5CmdpRnpjR2xrWlhKd2IyOXNMV052Ym5SeWIyeHNaWEl1YTNWaVpTMXplWE4wWlcyQ0pYTndhV1JsY25CdmIyd3QKWTI5dWRISnZiR3hsY2k1cmRXSmxMWE41YzNSbGJTNXpkbU9DTTNOd2FXUmxjbkJ2YjJ3dFkyOXVkSEp2Ykd4bApjaTVyZFdKbExYTjVjM1JsYlM1emRtTXVZMngxYzNSbGNpNXNiMk5oYkRBZEJnTlZIUTRFRmdRVXJzQ201d2hGCjdKY3lkSHZ6djQveDk0T2lVbjR3SHdZRFZSMGpCQmd3Rm9BVTdEOW1VUTVHbWQ3emVNWWdLKzhocUpVbFB3SXcKRFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUpJNkJMOTdxN2dSamNoSHZyYzlpY1ZhUFNOYXVUQlUxSkduUFlxcwpZdm5KMUwrWFM0UWxacFVkWlNqRWd4am9uY1FFS21HRWhEWGNHZGxwYk1CbWoxdVh3bjBNQXVxOXNDSHR0elIyCkdRb1dKOVJJVnFyeTkrbEtBNXpMenUwL2VBS2U3SFRLejNrWS9xL296b0xFNlNxcTh2ZWJhdU5YRThkbW5tZ0YKdkEzNU9KOXRlZ1oraGJsZG1MWEhoeVo3a0FVdEpMcnhmRERuVVNWb2trL1FmcEs0KytOb2NTdExQU1FqUE40RQpKeCttRzRIbnVlcWpEWHkwT3hrYW90d2xMMWMrY1dleDY1Yi9BK2w3WEVYZXgycytocnJLd2FINFMvM0o0dTlsCm1CTEd5aENBTllJZ0JZSnRXMmZPR05qMS9GTkM3bVMwNmdyRVNnSkF5eG1ZbU9NPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
        tlsKey: "LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2Z0lCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktnd2dnU2tBZ0VBQW9JQkFRQ2NsdHpMYXhva244ZFoKYWR0TFp5QnNhSktqVE1EcWswUGl4clZJTHZVKzF1dG5LZlNaVjg5bFI1aitZMGExdWY0Q2hGbWNHK1dxQXRHMgoveXh4MlJZOUJVOC9KZGtaS3ZsNzV3ZE5QVWNWblRobEZXYStjb3hKdHhMa3pWcFJETFdUR3JrazVQZ3l2TE1DCklZTzBLT25LUU9GYXh5Z3VnVDljVGZXQXdiVU41OTQrZFArMWFQQm9sc0M0WG15Z0lpSGs3Nlc3MXpteXo5cEMKWWJQZkZsajU3NmtwWGJBVVFsTUJsaVJJWWZIUEZ0ZGZmOU5zMG9SQjBlZ0dBY053M0J0d1VNRm9sa0N2YjNSUgphUFhscFpCUkJmSEp2c2FTVE9KRnN3Q3FLMlUvcXFKcnVLRWNPVnN3aHh2THF1TEhBUGJPQXlhS3BPakQ0d3NJCnVRN2FlTGtoQWdNQkFBRUNnZ0VBRGU5ekdOQ2dQcVY2Mm9uaGVvcTVSNkhnSXVqcXU0clMzaDlXOUxubWJoV00KVk4yci9KV085SEYwWm5jejkybzZTOE8yMXlpNGFKMDFuVXZhTmJZMGFodkxNS1hQOWVodGZzbW05d2hwWEwxbAplUmJOZlBka0VBOWJLV3plWG5EUXhwV2pQUldrd2tjcGNIQWJ4aHNQVmZEWTNVNUovM3dyR2xqVWJLLzdIK1hnCmpjd3IzZGZGTlZ0bUtvVXVjOVkxejRGUXhpYjEvSmZKeFNXaXd4S1piR0ZwNHpORG0wVTlpL2NscnNnQkxDaUUKNUNuMy94QUJYN0hvWVhvM1VCb1pBdzYweTZkNk8yeW1Zc1cyVlhqVE13NngvOGZyYTBDSWI2RDcyNEtxSDE5WApiRStQMnNaT09uNFdnQ2djc05NcXVTS1ZXTTlqY2JTT1pZZFVYYXJ3ZlFLQmdRRFp6c3I1QVdRUTVTUVozdzRTCnViampvQ3B6Sk5CWHUydlRnY2ZZQ1UyVGlVcnJibktLdFNpNFkwVUs3ZGg1UjBNNXl4azdmcVlsWTBZcFM5UjEKUWdzOUsxYTBOUWlzY1g5ZUh6emdnb2dKU1VVYWkrMWxCckFBSjNYekRJVXFLVWJIalZmSUUxU0FKWUNYYnJESwoxUEkxYk9LV0tXcys2RUtsTGNjYXovL1RPd0tCZ1FDNERBWWhBbDZwYXJIVnhqZzloNUtYYmFUZGhOb2lmcEFCCmo2Z29SQm56dEZIRmFlM0p2aW8wSWlDQ2thTUJDOGlDSlV4cFZEbWJjTVZxM0JETWN5Ty9rUTVkcjQzWThHMTAKUVZyZWU3ZkVvZDM0QWtJaVRXT1NpRmJiRHZHekM4cWFkcG5JNGNOd0tFSlVSbFNVTGtrUXdSOTF5dCtOM1ZMZwp3S3BELy9mblV3S0JnUUROK1JsSlVWOW4rc21oRGFjcFhpalNXZXpLNXMxL3FlWFdKcXp1U0Izc243RVI0MmkrCmM0TUduQm4ycytZN0NvRXdiamgyWXRhTUZNMk0wQUVpd2tvT2xxVnYxWmRXUEI3T3k0dXVaTUp3eGJGcjRWZW0KYWlTV2dMcXlGZXo0YWdCZFJmVDFhQkpJL1M0V0JyOTVrTmRjWHBRSW5US21VczV6bGs3cnREZWhjUUtCZ0VIcgpSSkswRjVXVWVtZDMzSkxsS1BNRnVXUUIvbU1XYzV1cmlXNEtua1QwVThsaVhHSENzN2tDZENSdjV6TXJ0a0F1Ci9jUkgvMjRXSVE5YURNWTlneE5NOEJsTUZJRWI5QWdNbEhCVlhZZVc5anFyREdiZTB3Z2J2d2dzdlJNRTZTY1QKelpidWphSnhPUGlZVEJqYXp4NnFIUXVDZ3psN2lRQ280Uk1EN2hXekFvR0JBTE1WZHRxQStOMzVoeXRBNXorUQpkeHdYelhIVXg0cUJZOHgrdnlHbkp6NHlRTDEvZ1ZNUldqRmN0QmhzOUo0UEZ0b3NhMWRqRzhTSTlqVktHS29QCmVZSExtZloxR25VQ2l6TWxIU01FVCszSVRVYnJjZkl0aDdqdkMwVkl1SXJZRGtrLzF3SElOWnJZL0xxWVR2ckwKTnFTZ09FRGdmbHJPRjlUVWNlanlyOHNxCi0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K"
        tlsCa: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURRVENDQWltZ0F3SUJBZ0lVVHN5WmFPenJuTXQxbU02bUxKaFVjNHRYejFZd0RRWUpLb1pJaHZjTkFRRUwKQlFBd01ERXVNQ3dHQTFVRUF3d2xjM0JwWkdWeWNHOXZiQzFqYjI1MGNtOXNiR1Z5TG10MVltVXRjM2x6ZEdWdApMbk4yWXpBZUZ3MHlNakE0TVRnd05ETTFNekphRncwek1qQTRNVFV3TkRNMU16SmFNREF4TGpBc0JnTlZCQU1NCkpYTndhV1JsY25CdmIyd3RZMjl1ZEhKdmJHeGxjaTVyZFdKbExYTjVjM1JsYlM1emRtTXdnZ0VpTUEwR0NTcUcKU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQ2NtcHNIY1RBbjdVMGkrKzVvajdpZTZGYnlWUFdmQzFvKwoyVkM5ZWlSaHpPYUNrWittdm5Qd3NzdDI3c3FSWGNMKzFxaUpja1BndlNTSUNtemVrekp5NERqSzJzYUMyditoCm5iY25EMlUrVDJJM0E2SFBpaDB4NWhrU2ozQVNxRjNHbGpmbHVoU3RadGZpSGdoUFc4eDVkdFZiQzNoMDRabG4KeTUzNllkKzMrZGV0MHU0Z2pTY2hraFo4MTFab2NFRUVhc0tOeC9DaEUyNG0yRS9LaHRidkRmeGhrKzZhZTdpaApHTGg2amtheVh1VHNNeFg3ZE85N3NLOE9aejBFN0NlN1BQTldYU0VORk04ZGRPaDd0NlpTTG5xaWI2a2tOWWV6CldqYXR2d3JLVFFzTnZkNzdhRk53RW9oMklMYnVjczdTVmNUdyt4RDhnUFN6cUZvWTN4VkZBZ01CQUFHalV6QlIKTUIwR0ExVWREZ1FXQkJUc1AyWlJEa2FaM3ZONHhpQXI3eUdvbFNVL0FqQWZCZ05WSFNNRUdEQVdnQlRzUDJaUgpEa2FaM3ZONHhpQXI3eUdvbFNVL0FqQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BMEdDU3FHU0liM0RRRUJDd1VBCkE0SUJBUUFmSC9ReGM0ako0b1NSUjFMb2dPVHZxOWxqVC9sS2xFdm0rTWQ2NGNiUUNQeE9Pd0ppQ0dxbDZ3Y2QKSzNPUXZmbFZ6NkdGY0NZUE91b2hDdkhBRmhkVWkxZExIbFVBRHpkNUw4RnNmbFJYdExqQVQ2SWhUemJlb0tzQgpHVWVSaGNrNmlORkVaWUp4NEtMSEJQSG0yRzd3U3Bnb0pqbHp5a1d4Zm14RHlRSUh4WG5NNGZjSm1XT2tYajJpCkNXcm9wSUNtVHFIYy9rdnpIK0t4Z3h1YitLTko4UGd4UWhMNzNWVzZpd2RaYmRkVVVwUUNLTDg1TWRxUy9rdXMKT0kwNjNnZjBkY1VNazNvMFV2d1ZUSURUUStJcmwyM3poWlhZY1ZNdkRSOHROMkNRbjVyYXR5ZkxuYXhxZGdtOApiSGJsS2dRU2ZnL25yajE2Q0ROWnNsS0pHcCtCCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
