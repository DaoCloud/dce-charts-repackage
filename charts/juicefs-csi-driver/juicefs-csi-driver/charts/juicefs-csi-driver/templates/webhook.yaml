{{- $certEnabled := .Values.webhook.certManager.enabled }}
{{- $webhookApiVersion := include "webhook.apiVersion" . -}}
{{- $caCert := include "webhook.caBundleCertPEM" . -}}
{{- $crtPEM := include "webhook.certPEM" . -}}
{{- $keyPEM := include "webhook.keyPEM" . -}}
{{- $timeoutSeconds := .Values.webhook.timeoutSeconds }}

{{- if eq .Values.mountMode "sidecar" }}
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: juicefs-admission-webhook
  {{- if $certEnabled }}
  annotations:
    cert-manager.io/inject-ca-from: {{ printf "%s/%s" .Release.Namespace "juicefs-cert" | quote }}
  {{- end }}
webhooks:
  - name: sidecar.inject.juicefs.com
    rules:
      - apiGroups:   [""]
        apiVersions: ["v1"]
        operations:  ["CREATE"]
        resources:   ["pods"]
    clientConfig:
      service:
        namespace: {{ .Release.Namespace | quote }}
        name: juicefs-admission-webhook
        path: "/juicefs/inject-v1-pod"
      {{- if $certEnabled }}
      caBundle: Cg==
      {{- else }}
      caBundle: {{ ternary (b64enc $caCert) (b64enc (trim $crtPEM)) (empty $crtPEM) }}
      {{- end }}
    timeoutSeconds: {{ $timeoutSeconds }}
    failurePolicy: {{ $.Values.webhook.FailurePolicy }}
    sideEffects: None
    admissionReviewVersions: ["v1","v1beta1"]
    namespaceSelector:
      matchLabels:
        juicefs.com/enable-injection: "true"
{{- end }}

{{- if eq .Values.mountMode "serverless" }}
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: juicefs-admission-serverless-webhook
  {{- if $certEnabled }}
  annotations:
    cert-manager.io/inject-ca-from: {{ printf "%s/%s" .Release.Namespace "juicefs-cert" | quote }}
  {{- end }}
webhooks:
  - name: sidecar.inject.serverless.juicefs.com
    rules:
      - apiGroups:   [""]
        apiVersions: ["v1"]
        operations:  ["CREATE"]
        resources:   ["pods"]
    clientConfig:
      service:
        namespace: {{ .Release.Namespace | quote }}
        name: juicefs-admission-webhook
        path: "/juicefs/serverless/inject-v1-pod"
      {{- if $certEnabled }}
      caBundle: Cg==
      {{- else }}
      caBundle: {{ ternary (b64enc $caCert) (b64enc (trim $crtPEM)) (empty $crtPEM) }}
      {{- end }}
    timeoutSeconds: {{ $timeoutSeconds }}
    failurePolicy: {{ $.Values.webhook.FailurePolicy }}
    sideEffects: None
    admissionReviewVersions: ["v1","v1beta1"]
    namespaceSelector:
      matchLabels:
        juicefs.com/enable-serverless-injection: "true"
{{- end }}

{{- if .Values.validatingWebhook.enabled -}}
---
# before changing this value, check the required kubernetes version
# https://kubernetes.io/docs/reference/access-authn-authz/extensible-admission-controllers/#prerequisites
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    {{- include "juicefs-csi.labels" . | nindent 4 }}
  name: juicefs-admission-webhook
  {{- if $certEnabled }}
  annotations:
    cert-manager.io/inject-ca-from: {{ printf "%s/%s" .Release.Namespace "juicefs-cert" | quote }}
  {{- end }}
webhooks:
  - name: validate.secret.juicefs.com
    matchPolicy: Equivalent
    objectSelector:
      matchLabels:
        juicefs.com/validate-secret: "true"
    rules:
      - apiGroups:
          - ""
        apiVersions:
          - v1
        operations:
          - CREATE
          - UPDATE
        resources:
          - secrets
    failurePolicy: {{ .Values.validatingWebhook.failurePolicy | default "Ignore" }}
    sideEffects: None
    admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: juicefs-admission-webhook
        namespace: {{ .Release.Namespace | quote }}
        path: /juicefs/validate-secret
      {{- if $certEnabled }}
      caBundle: Cg==
      {{- else }}
      caBundle: {{ ternary (b64enc $caCert) (b64enc (trim $crtPEM)) (empty $crtPEM) }}
      {{- end }}
    {{- if .Values.validatingWebhook.timeoutSeconds }}
    timeoutSeconds: {{ .Values.validatingWebhook.timeoutSeconds }}
    {{- end }}
    {{- if .Values.validatingWebhook.namespaceSelector }}
    namespaceSelector: {{ toYaml .Values.validatingWebhook.namespaceSelector | nindent 6 }}
    {{- end }}
    {{- if .Values.validatingWebhook.objectSelector }}
    objectSelector: {{ toYaml .Values.validatingWebhook.objectSelector | nindent 6 }}
    {{- end }}
  - name: validate.pv.juicefs.com
    matchPolicy: Equivalent
    rules:
      - apiGroups:
          - ""
        apiVersions:
          - v1
        operations:
          - CREATE
        resources:
          - persistentvolumes
    failurePolicy: {{ .Values.validatingWebhook.failurePolicy | default "Ignore" }}
    sideEffects: None
    admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: juicefs-admission-webhook
        namespace: {{ .Release.Namespace | quote }}
        path: /juicefs/validate-pv
      {{- if $certEnabled }}
      caBundle: Cg==
      {{- else }}
      caBundle: {{ ternary (b64enc $caCert) (b64enc (trim $crtPEM)) (empty $crtPEM) }}
      {{- end }}
    {{- if .Values.validatingWebhook.timeoutSeconds }}
    timeoutSeconds: {{ .Values.validatingWebhook.timeoutSeconds }}
    {{- end }}
    {{- if .Values.validatingWebhook.namespaceSelector }}
    namespaceSelector: {{ toYaml .Values.validatingWebhook.namespaceSelector | nindent 6 }}
    {{- end }}
    {{- if .Values.validatingWebhook.objectSelector }}
    objectSelector: {{ toYaml .Values.validatingWebhook.objectSelector | nindent 6 }}
    {{- end }}
{{- if or (eq "nightly" $.Values.image.tag) (hasPrefix "dev" $.Values.image.tag) (semverCompare ">0.27.0" $.Values.image.tag)}}
  - name: validate.evict-pod.juicefs.com
    matchPolicy: Equivalent
    rules:
      - apiGroups:
          - ""
        apiVersions:
          - v1
        operations:
          - CREATE
        resources:
          - pods/eviction
    failurePolicy: {{ .Values.validatingWebhook.failurePolicy | default "Ignore" }}
    sideEffects: None
    admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: juicefs-admission-webhook
        namespace: {{ .Release.Namespace | quote }}
        path: /juicefs/validate-evict-pod
      {{- if $certEnabled }}
      caBundle: Cg==
      {{- else }}
      caBundle: {{ ternary (b64enc $caCert) (b64enc (trim $crtPEM)) (empty $crtPEM) }}
      {{- end }}
    {{- if .Values.validatingWebhook.timeoutSeconds }}
    timeoutSeconds: {{ .Values.validatingWebhook.timeoutSeconds }}
    {{- end }}
{{- end }}
{{- end }}

{{- if or (eq .Values.mountMode "sidecar") (.Values.validatingWebhook.enabled) }}
{{- if $certEnabled }}
---
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: juicefs-selfsigned
  namespace: {{ .Release.Namespace }}
spec:
  selfSigned: {}
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: juicefs-cert
  namespace: {{ .Release.Namespace }}
spec:
  duration: 43800h #5year
  dnsNames:
    - juicefs-admission-webhook
    - juicefs-admission-webhook.{{ .Release.Namespace }}
    - juicefs-admission-webhook.{{ .Release.Namespace }}.svc
  issuerRef:
    name: juicefs-selfsigned
    kind: Issuer
  secretName: juicefs-webhook-certs
{{- end }}
{{- end }}
