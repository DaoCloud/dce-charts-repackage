{{- $certEnabled := .Values.webhook.certManager.enabled }}

{{- if or (eq .Values.mountMode "sidecar") (.Values.validatingWebhook.enabled)  (eq .Values.mountMode "serverless") }}
{{- if not $certEnabled }}
kind: Secret
apiVersion: v1
metadata:
  name: juicefs-webhook-certs
  namespace: {{ .Release.Namespace | quote }}
  labels:
    app.kubernetes.io/component: webhook-secret
    {{- include "juicefs-csi.labels" . | nindent 4 }}
type: Opaque
data:
  ca.crt: {{ b64enc (include "webhook.caBundleCertPEM" .) }}
  tls.crt: {{ b64enc (include "webhook.certPEM" .) }}
  tls.key: {{ b64enc (include "webhook.keyPEM" .) }}
{{- end }}
{{- end }}
{{- if and .Values.dashboard.enabled .Values.dashboard.auth.enabled (not .Values.dashboard.auth.existingSecret) }}
---
kind: Secret
apiVersion: v1
metadata:
  name: juicefs-dashboard-secret
  namespace: {{ .Release.Namespace | quote }}
  labels:
    app.kubernetes.io/component: dashboard-secret
    {{- include "juicefs-csi.labels" . | nindent 4 }}
type: Opaque
stringData:
  username: {{ .Values.dashboard.auth.username }}
  password: {{ .Values.dashboard.auth.password }}
{{- end }}