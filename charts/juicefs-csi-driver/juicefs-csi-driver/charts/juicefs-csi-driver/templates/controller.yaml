{{- if .Values.controller.enabled }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app.kubernetes.io/component: controller
    {{- include "juicefs-csi.labels" . | nindent 4 }}
    {{- if .Values.controller.labels }}
    {{- toYaml .Values.controller.labels | nindent 4}}
    {{- end}}
  {{- with .Values.controller.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  name: juicefs-csi-controller
  namespace: {{ .Release.Namespace | quote }}
spec:
  replicas: {{ .Values.controller.replicas }}
  selector:
    matchLabels:
      app: juicefs-csi-controller
      {{- include "juicefs-csi.selectorLabels" . | nindent 6 }}
  serviceName: juicefs-csi-controller
  template:
    metadata:
      labels:
        app: juicefs-csi-controller
        {{- include "juicefs-csi.selectorLabels" . | nindent 8 }}
        {{- if .Values.controller.labels }}
        {{- toYaml .Values.controller.labels | nindent 8}}
        {{- end}}
      {{- with .Values.controller.annotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
      {{- toYaml . | nindent 6 }}
    {{- end }}
    {{- if .Values.hostAliases }}
      hostAliases:
      {{- toYaml .Values.hostAliases | nindent 6 }}
    {{- end }}
      containers:
      - name: juicefs-plugin
        image: {{ .Values.image.registry }}/{{ .Values.image.repository }}:{{ .Values.image.tag }}
        {{- if .Values.image.pullPolicy }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        {{- end }}
        args:
        - --endpoint=$(CSI_ENDPOINT)
        - --logtostderr
        - --nodeid=$(NODE_NAME)
        {{- if .Values.controller.debug }}
        - --v=1
        {{- end }}
        {{- if .Values.controller.leaderElection.enabled }}
        - --leader-election
        {{- if .Values.controller.leaderElection.leaderElectionNamespace }}
        - --leader-election-namespace={{ .Values.controller.leaderElection.leaderElectionNamespace }}
        {{- end }}
        {{- if .Values.controller.leaderElection.leaseDuration }}
        - --leader-election-lease-duration={{ .Values.controller.leaderElection.leaseDuration }}
        {{- end }}
        {{- end }}
        {{- if and (.Values.controller.provisioner) (ne .Values.mountMode "process" ) }}
        - --provisioner=true
        {{- end }}
        {{- if hasKey .Values.controller "cacheClientConf" }}
        - --cache-client-conf={{ .Values.controller.cacheClientConf }}
        {{- end }}
        {{- if or (eq .Values.mountMode "sidecar") (.Values.validatingWebhook.enabled)  (eq .Values.mountMode "serverless") }}
        - --webhook=true
        {{- end }}
        {{- if .Values.validatingWebhook.enabled }}
        - --validating-webhook=true
        {{- end }}
        {{- if eq .Values.mountMode "process" }}
        - --by-process=true
        {{- end }}
        {{- if .Values.globalConfig.enabled }}
        - --config=/etc/config/config.yaml
        {{- end }}
        env:
        - name: CSI_ENDPOINT
          value: unix:///var/lib/csi/sockets/pluginproxy/csi.sock
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        {{- if ne .Values.mountMode "process" }}
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: JUICEFS_MOUNT_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: JUICEFS_MOUNT_PATH
          value: {{ .Values.jfsMountDir }}
        - name: JUICEFS_CONFIG_PATH
          value: {{ .Values.jfsConfigDir }}
        {{- if .Values.defaultMountImage.ce }}
        - name: JUICEFS_CE_MOUNT_IMAGE
          value: {{ .Values.defaultMountImage.ce }}
        {{- end }}
        {{- if .Values.defaultMountImage.ee }}
        - name: JUICEFS_EE_MOUNT_IMAGE
          value: {{ .Values.defaultMountImage.ee }}
        {{- end }}
        {{- if .Values.node.mountPodNonPreempting }}
        - name: JUICEFS_MOUNT_PRIORITY_NAME
          value: "juicefs-mount-priority-nonpreempting"
        - name: JUICEFS_MOUNT_PREEMPTION_POLICY
          value: "Never"
        {{- end }}
        {{- end }}
        {{- if .Values.immutable }}
        - name: JUICEFS_IMMUTABLE
          value: "true"
        {{- end }}
        {{- if .Values.controller.metricsPort }}
        - name: JUICEFS_CSI_WEB_PORT
          value: "{{ .Values.controller.metricsPort }}"
        {{- end }}
        {{- if .Values.controller.envs }}
{{ toYaml .Values.controller.envs | trim | indent 8 }}
        {{- end }}
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /healthz
            port: healthz
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 3
        resources:
          {{- toYaml .Values.controller.resources | nindent 10 }}
        ports:
        - containerPort: 9909
          name: healthz
          protocol: TCP
        - containerPort: {{ .Values.controller.metricsPort }}
          name: metrics
          protocol: TCP
        securityContext:
          capabilities:
            add:
            - SYS_ADMIN
          {{- if ne .Values.mountMode "serverless" }}
          privileged: true
          {{- end }}
        volumeMounts:
        - mountPath: /var/lib/csi/sockets/pluginproxy/
          name: socket-dir
        {{- if ne .Values.mountMode "process" }}
        - mountPath: /jfs
          {{- if ne .Values.mountMode "serverless" }}
          mountPropagation: Bidirectional
          {{- end }}
          name: jfs-dir
        - mountPath: /root/.juicefs
          {{- if ne .Values.mountMode "serverless" }}
          mountPropagation: Bidirectional
          {{- end }}
          name: jfs-root-dir
        {{- end }}
        {{- if or (eq .Values.mountMode "sidecar") (.Values.validatingWebhook.enabled) (eq .Values.mountMode "serverless") }}
        - name: webhook-certs
          mountPath: /etc/webhook/certs
          readOnly: true
        {{- end }}
        {{- if .Values.globalConfig.enabled }}
        - name: juicefs-config
          mountPath: /etc/config
        {{- end }}
      {{- if or (not .Values.controller.provisioner) (eq .Values.mountMode "process") }}
      - name: csi-provisioner
        image: {{ printf "%s/%s:%s" .Values.sidecars.csiProvisionerImage.registry .Values.sidecars.csiProvisionerImage.repository .Values.sidecars.csiProvisionerImage.tag }}
        {{- if .Values.sidecars.csiProvisionerImage.pullPolicy }}
        imagePullPolicy: {{ .Values.sidecars.csiProvisionerImage.pullPolicy }}
        {{- end }}
        args:
        - --csi-address=$(ADDRESS)
        - --timeout=60s
        - --v=5
        {{- if .Values.controller.leaderElection.enabled }}
        {{- if gt .Values.sidecars.csiProvisionerImage.tag "v2.0.0" }}
        - --leader-election
        {{- else }}
        - --enable-leader-election
        {{- end }}
        {{- if .Values.controller.leaderElection.leaderElectionNamespace }}
        - --leader-election-namespace={{ .Values.controller.leaderElection.leaderElectionNamespace }}
        {{- end }}
        {{- if .Values.controller.leaderElection.leaseDuration }}
        - --leader-election-lease-duration={{ .Values.controller.leaderElection.leaseDuration }}
        {{- end }}
        {{- end }}
        env:
        - name: ADDRESS
          value: /var/lib/csi/sockets/pluginproxy/csi.sock
        volumeMounts:
        - mountPath: /var/lib/csi/sockets/pluginproxy/
          name: socket-dir
      {{- end }}
      - args:
          - --csi-address=$(ADDRESS)
          - --timeout=20s
          - --leader-election
          - --v=2
        env:
          - name: ADDRESS
            value: /var/lib/csi/sockets/pluginproxy/csi.sock
        image: {{ printf "%s/%s:%s" .Values.sidecars.csiResizerImage.registry .Values.sidecars.csiResizerImage.repository .Values.sidecars.csiResizerImage.tag }}
        {{- if .Values.sidecars.csiResizerImage.pullPolicy }}
        imagePullPolicy: {{ .Values.sidecars.csiResizerImage.pullPolicy }}
        {{- end }}
        name: csi-resizer
        volumeMounts:
          - mountPath: /var/lib/csi/sockets/pluginproxy/
            name: socket-dir
      - name: liveness-probe
        image: {{ printf "%s/%s:%s" .Values.sidecars.livenessProbeImage.registry .Values.sidecars.livenessProbeImage.repository .Values.sidecars.livenessProbeImage.tag }}
        {{- if .Values.sidecars.livenessProbeImage.pullPolicy }}
        imagePullPolicy: {{ .Values.sidecars.livenessProbeImage.pullPolicy }}
        {{- end }}
        args:
        - --csi-address=$(ADDRESS)
        - --health-port=$(HEALTH_PORT)
        env:
        - name: ADDRESS
          value: /csi/csi.sock
        - name: HEALTH_PORT
          value: "9909"
        volumeMounts:
        - mountPath: /csi
          name: socket-dir
      priorityClassName: {{ .Values.controller.priorityClassName }}
      serviceAccount: {{ include "juicefs-csi.controller.serviceAccountName" . }}
      {{- with .Values.controller.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.controller.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.controller.tolerations }}
      tolerations:
        {{- toYaml . | nindent 6 }}
      {{- end }}
      volumes:
      - emptyDir: {}
        name: socket-dir
      {{- if or (eq .Values.mountMode "mountpod") (eq .Values.mountMode "sidecar") }}
      - hostPath:
          path: {{ .Values.jfsMountDir }}
          type: DirectoryOrCreate
        name: jfs-dir
      - hostPath:
          path: {{ .Values.jfsConfigDir }}
          type: DirectoryOrCreate
        name: jfs-root-dir
      {{- else if eq .Values.mountMode "serverless" }}
      - emptyDir: {}
        name: jfs-dir
      - emptyDir: {}
        name: jfs-root-dir
      {{- end }}
      {{- if or (eq .Values.mountMode "sidecar") (.Values.validatingWebhook.enabled)  (eq .Values.mountMode "serverless")}}
      - name: webhook-certs
        secret:
          secretName: {{ template "juicefs-csi.webhook.secret" . }}
      {{- end }}
      {{- if .Values.globalConfig.enabled }}
      - name: juicefs-config
        configMap:
          name: {{ include "juicefs-csi.fullname" . }}-config
      {{- end }}
{{- end }}
